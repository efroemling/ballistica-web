@use '@angular/material' as mat;
@use './app-theme';
@use './styles/api';
@use './styles/markdown';
@use './styles/tables';
@use './styles/general';

// Define our default theme here.
// Ericf note:
// This duplicates code in our custom themes; perhaps we can unify somehow?


// Define the dark theme.
$_dark-primary: mat.define-palette(mat.$deep-purple-palette, 600, 50, 900, 300);
$_dark-accent:  mat.define-palette(mat.$green-palette, A200, A100, A400);
$_dark-theme: mat.define-dark-theme($_dark-primary, $_dark-accent);

// Define the light theme.
$_light-primary: mat.define-palette(mat.$indigo-palette);
$_light-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);
$_light-theme: mat.define-light-theme($_light-primary, $_light-accent);

// Include material core styles.
// Ericf note: why is this included here but not in custom-themes?
@include mat.core();

// Default , dark theme  for old browsers who dont know prefers-color-scheme , they actually living in dark ;)
@include mat.all-component-themes($_dark-theme);
@include app-theme.theme($_dark-theme);

// Now check if browser/host OS have any preference.
/* Dark mode */
@media (prefers-color-scheme: dark) {
  @include mat.all-component-themes($_dark-theme);
  @include app-theme.theme($_dark-theme);
}

/* Light mode */
@media (prefers-color-scheme: light) {
  @include mat.all-component-themes($_light-theme);
  @include app-theme.theme($_light-theme);
}

// heck to avoid scrolling of side-navbar
.mat-drawer:not(.mat-drawer-side) {
  position: fixed;
}

.mat-drawer-backdrop {
  position: fixed !important;
}

::-webkit-scrollbar {
  width: 4px;
  overflow-y: scroll;
  background-color: #F5F5F5;
}

::-webkit-scrollbar-thumb {
  border-radius: 20px;
  -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.1);
  background-color: #4285F4;
}
